name: CI
on: [push]

jobs:
  miniconda:
    name: Setup and test
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
            os: ["ubuntu-latest"]
    steps:
      - uses: actions/checkout@v4
      - uses: snyk/actions/setup@master
      - uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: test
          environment-file: environment.yml
          use-mamba: true
          python-version: "3.9"
          
      - shell: bash -l {0}
        run: |
          conda info
          conda list
          
      - name: Install snowlaps-emulator
        shell: bash -l {0}
        run: |
            pip install -e .
            
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0 
          
      - name: Run tests and generate coverage report
        shell: bash -l {0}
        run: |
          pip install pytest
          pip install pytest-cov
          pytest --cov=./ --cov-report=xml

      - name: Test snowlaps-emulator app
        uses: streamlit/streamlit-app-action@v0.0.3
        with:
          app-path: app/app.py
          # Add pytest-args to output junit xml
          pytest-args: -v --junit-xml=test-results.xml
      - if: always()
        uses: pmeier/pytest-results-action@v0.6.0
        with:
          path: test-results.xml
          summary: true
          display-options: fEX
            
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v3
      #   with:
      #     directory: ./coverage/reports/
      #     fail_ci_if_error: true
      #     files: ./coverage.xml
      #     flags: unittests
      #     name: codecov-umbrella
      #     path_to_write_report: ./coverage/codecov_report.txt
      #     verbose: true

      # - name: Run Snyk to check for vulnerabilities
      #   run: |
      #     pip install -r dev-requirements.txt
      #     snyk test --file=dev-requirements.txt --package-manager=pip --severity-threshold=high
      #   env:
      #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          
